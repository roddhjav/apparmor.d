# apparmor.d - Full set of apparmor profiles
# Copyright (C) 2018-2021 Mikhail Morfikov
# Copyright (C) 2021 Alexandre Pujol <alexandre@pujol.io>
# SPDX-License-Identifier: GPL-2.0-only

abi <abi/3.0>,

include <tunables/global>

@{exec_path} = @{lib}/{,udisks2/}udisksd
profile udisksd @{exec_path} flags=(attach_disconnected) {
  include <abstractions/base>
  include <abstractions/dbus-strict>
  include <abstractions/disks-write>
  include <abstractions/nameservice-strict>
  include <abstractions/openssl>

  capability chown,
  capability dac_override,
  capability dac_read_search,
  capability fowner,
  capability fsetid,
  capability setgid,
  capability setuid,
  capability sys_admin,
  capability sys_nice,
  capability sys_rawio,

  network netlink raw,

  # Allow mounting of removable devices
  mount fstype={btrfs,ext*,vfat,iso9660,udf,ntfs3} /dev/{s,v}d[a-z]*       -> @{MOUNTS}/*/,
  mount fstype={btrfs,ext*,vfat,iso9660,udf,ntfs3} /dev/{s,v}d[a-z]*[0-9]* -> @{MOUNTS}/*/,
  mount fstype={btrfs,ext*,vfat,iso9660,udf,ntfs3} /dev/dm-[0-9]*          -> @{MOUNTS}/*/,

  # Allow mounting of loop devices (ISO files)
  mount fstype={btrfs,ext*,vfat,iso9660,udf,ntfs3} /dev/loop[0-9]*        -> @{MOUNTS}/*/,
  mount fstype={btrfs,ext*,vfat,iso9660,udf,ntfs3} /dev/loop[0-9]*p[0-9]* -> @{MOUNTS}/*/,

  # Allow mounting of cdrom
  mount fstype={btrfs,ext*,vfat,iso9660,udf,ntfs3} /dev/loop[0-9]* -> @{MOUNTS}/*/,
  mount fstype={iso9660,udf,ntfs3}                 /dev/sr[0-9]*   -> @{MOUNTS}/*/,

  # Allow mounting od sd cards
  mount fstype={btrfs,ext*,vfat,iso9660,udf,ntfs3} /dev/mmcblk[0-9]         -> @{MOUNTS}/*/,
  mount fstype={btrfs,ext*,vfat,iso9660,udf,ntfs3} /dev/mmcblk[0-9]*p[0-9]* -> @{MOUNTS}/*/,

  # Allow mounting on temporary mount point
  mount -> @{run}/udisks2/temp-mount-*/,

  # Allow unmounting
  umount @{MOUNTS}/,
  umount @{MOUNTS}/*/,
  umount @{run}/udisks2/temp-mount-*/,
  umount /media/cdrom[0-9]/,

  dbus (send,receive) bus=system path=/
       interface=org.freedesktop.DBus.Introspectable
       member=Introspect,

  dbus (send,receive) bus=system path=/
       interface=org.freedesktop.DBus.Properties
       member=Get,

  dbus (send,receive) bus=system path=/org/freedesktop/UDisks2{,/**}
       interface=org.freedesktop.{DBus*,UDisks2*},

  dbus receive bus=system path=/org/freedesktop/PolicyKit[0-9]/Authority
       interface=org.freedesktop.PolicyKit[0-9].Authority
       member=Changed,

  dbus send bus=system path=/org/freedesktop/DBus
       interface=org.freedesktop.DBus
       member={ReleaseName,GetConnectionUnixUser,RequestName},

  dbus send bus=system path=/org/freedesktop/login[0-9]
       interface=org.freedesktop.login[0-9].Manager
       member=Inhibit,

  dbus receive bus=system path=/org/freedesktop/login[0-9]*
       interface=org.freedesktop.login[0-9]*.Manager
       member={PrepareForSleep,PrepareForShutdown}
       peer=(name=:*, label=systemd-logind),

  dbus send bus=system path=/org/freedesktop/PolicyKit[0-9]/Authority
       interface=org.freedesktop.DBus.Properties
       member=GetAll,

  dbus send bus=system path=/org/freedesktop/PolicyKit[0-9]/Authority
       interface=org.freedesktop.PolicyKit[0-9].Authority
       member=CheckAuthorization,

  dbus bind bus=system
       name=org.freedesktop.UDisks2,

  @{exec_path} mr,

  @{bin}/{,ba,da}sh      rix,
  @{bin}/umount          rix,

  @{bin}/dmidecode            rPx,
  @{bin}/dumpe2fs             rPx,
  @{bin}/eject                rPx,
  @{bin}/fsck.fat             rPx,
  @{bin}/lvm                 rPUx,
  @{bin}/mke2fs               rPx,
  @{bin}/mkfs.btrfs           rPx,
  @{bin}/mkfs.ext{2,3,4}      rPx,
  @{bin}/mkfs.fat             rPx,
  @{bin}/mount.exfat-fuse    rPUx,
  @{bin}/ntfs-3g              rPx,
  @{bin}/ntfsfix              rPx,
  @{bin}/sfdisk               rPx,
  @{bin}/sgdisk               rPx,
  @{bin}/systemctl            rPx -> child-systemctl,
  @{bin}/systemd-escape       rPx,

  /etc/udisks2/{,**} r,
  /etc/libblockdev/{,**} r,
  /etc/fstab r,
  /etc/crypttab r,

  /var/lib/udisks2/ r,
  /var/lib/udisks2/mounted-fs{,*} rw,

  # Be able to create/delete dirs for removable media
  @{MOUNTS}/ rw,
  @{MOUNTS}/*/ rw,

  @{run}/ r,
  @{run}/mount/utab{,.*} rw,
  @{run}/mount/utab.lock rwk,
  @{run}/udisks2/{,**} rw,
  @{run}/systemd/seats/seat[0-9]* r,
  @{run}/systemd/inhibit/[0-9]*.ref rw,
  @{run}/cryptsetup/ r,
  @{run}/cryptsetup/L* rwk,

  @{sys}/bus/ r,
  @{sys}/class/ r,
  @{sys}/devices/pci[0-9]*/**/{ata,usb,mmc}[0-9]/{,**/}remove rw,
  @{sys}/devices/pci[0-9]*/**/{ata,usb,mmc,virtio}[0-9]/{,**/}uevent w,
  @{sys}/devices/virtual/bdi/**/read_ahead_kb r,
  @{sys}/devices/virtual/block/*/{,**} rw,
  @{sys}/devices/virtual/block/loop[0-9]*/uevent rw,
  @{sys}/fs/ r,

        @{PROC}/cmdline r,
        @{PROC}/devices r,
        @{PROC}/swaps r,
  owner @{PROC}/@{pid}/fd/ r,
  owner @{PROC}/@{pid}/mountinfo r,
  owner @{PROC}/@{pid}/mounts r,

  /dev/loop-control rw,
  /dev/mapper/ r,
  /dev/mapper/control rw,
  /dev/null.[0-9]* rw,

  include if exists <local/udisksd>
}
