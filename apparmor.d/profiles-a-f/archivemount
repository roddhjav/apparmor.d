# apparmor.d - Full set of apparmor profiles
# Copyright (C) 2021 Mikhail Morfikov
# Copyright (C) 2021-2024 Alexandre Pujol <alexandre@pujol.io>
# SPDX-License-Identifier: GPL-2.0-only

abi <abi/4.0>,

include <tunables/global>

@{exec_path}  = @{bin}/archivemount
profile archivemount @{exec_path} {
  include <abstractions/base>

  @{exec_path} mr,

  @{bin}/fusermount{,3} rCx -> fusermount,

        /**.{tar,tar.gz,zip} r,
        /**.{TAR,TAR.GZ,ZIP} r,
  owner /**.{tar,tar.gz,zip} w,
  owner /**.{TAR,TAR.GZ,ZIP} w,

  owner @{HOME}/ r,
  owner @{HOME}/*/ r,
  owner @{HOME}/*/*/ r,

  #aa:only test
  mount fstype=fuse.archivemount options=(rw nodev nosuid) archivemount -> /tmp/tmp.@{rand10}/{,**},
  /tmp/tmp.@{rand10}/{,**} rw,
  /dev/fuse rw,

  profile fusermount {
    include <abstractions/base>
    include <abstractions/app/fusermount>

    capability setuid,

    unix type=stream peer=(label=archivemount),

    mount fstype={fuse,fuse.archivemount} options=(rw nodev nosuid) archivemount -> @{HOME}/*/,
    mount fstype={fuse,fuse.archivemount} options=(rw nodev nosuid) archivemount -> @{HOME}/*/*/,

    umount @{HOME}/*/,
    umount @{HOME}/*/*/,

    /**.{tar,tar.gz,zip} r,
    /**.{TAR,TAR.GZ,ZIP} r,

    #aa:only test
    mount fstype=fuse.archivemount options=(rw nodev nosuid) archivemount -> /tmp/tmp.@{rand10}/**,

    include if exists <local/archivemount_fusermount>
  }

  include if exists <local/archivemount>
}

# vim:syntax=apparmor
