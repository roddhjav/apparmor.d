# apparmor.d - Full set of apparmor profiles
# Copyright (C) 2021-2024 Alexandre Pujol <alexandre@pujol.io>
# SPDX-License-Identifier: GPL-2.0-only

abi <abi/4.0>,

include <tunables/global>

@{exec_path} = @{sbin}/NetworkManager
profile NetworkManager @{exec_path} flags=(attach_disconnected) {
  include <abstractions/base>
  include <abstractions/bus-system>
  include <abstractions/bus/fi.w1.wpa_supplicant1>
  include <abstractions/bus/system/org.bluez>
  include <abstractions/bus/org.freedesktop.hostname1>
  include <abstractions/bus/org.freedesktop.login1>
  include <abstractions/bus/org.freedesktop.ModemManager1>
  include <abstractions/bus/org.freedesktop.PolicyKit1>
  include <abstractions/bwrap>
  include <abstractions/nameservice-strict>
  include <abstractions/ssl_certs>
  include <abstractions/user-tmp>

  capability audit_write,
  capability dac_override,
  capability kill,
  capability net_admin,
  capability net_bind_service,
  capability net_raw,
  capability setgid,
  capability setuid,
  capability sys_chroot,
  capability sys_module,

  network inet stream,
  network inet6 stream,
  network inet dgram,
  network inet6 dgram,
  network inet raw,
  network inet6 raw,
  network netlink raw,
  network packet dgram,

  ptrace read peer=unconfined,

  signal (send) set=(term) peer=dnsmasq,

  #aa:dbus own bus=system name=org.freedesktop.NetworkManager

  #aa:dbus talk bus=system name=fi.w1.wpa_supplicant1 label=wpa-supplicant
  #aa:dbus talk bus=system name=org.fedoraproject.FirewallD1 label=firewalld
  #aa:dbus talk bus=system name=org.freedesktop.nm_dispatcher label=nm-dispatcher
  #aa:dbus talk bus=system name=org.freedesktop.resolve1 label="@{p_systemd_resolved}"


  dbus receive bus=system path=/org/freedesktop
       interface=org.freedesktop.DBus.ObjectManager
       member=GetManagedObjects
       peer=(name=@{busname}),

  dbus receive bus=system path=/org/freedesktop
       interface=org.freedesktop.DBus.ObjectManager
       member=GetManagedObjects
       peer=(name=@{busname}, label=gnome-control-center),


  dbus receive bus=system path=/org/freedesktop
       interface=org.freedesktop.DBus.ObjectManager
       member=GetManagedObjects
       peer=(name=@{busname}, label=nm-online),

  dbus send bus=system path=/org/freedesktop/nm_dispatcher
       interface=org.freedesktop.nm_dispatcher
       member=Action2
       peer=(name=org.freedesktop.nm_dispatcher),

  dbus send bus=system path=/uk/org/thekelleys/dnsmasq
       interface=org.freedesktop.NetworkManager.dnsmasq
       member=SetServersEx
       peer=(name=@{busname}, label=dnsmasq),

  dbus send bus=system path=/org/freedesktop
       interface=org.freedesktop.DBus.ObjectManager
       member={InterfacesAdded,InterfacesRemoved}
       peer=(name=org.freedesktop.DBus),

  dbus receive bus=system path=/
       interface=org.freedesktop.DBus.Introspectable
       member=Introspect
       peer=(name=@{busname}, label=cockpit-bridge),

  @{exec_path} mr,

  @{sh_path}        rix,
  @{sbin}/nft       rix,

  @{sbin}/dnsmasq                                            rPx,
  @{bin}/kmod                                                rPx,
  @{bin}/netconfig                                          rPUx,
  @{sbin}/resolvconf                                         rPx,
  @{bin}/resolvectl                                          rPx,
  @{bin}/systemctl                                           rCx -> systemctl,
  @{lib}/{,NetworkManager/}nm-daemon-helper                  rPx,
  @{lib}/{,NetworkManager/}nm-dhcp-helper                    rPx,
  @{lib}/{,NetworkManager/}nm-dispatcher                     rPx,
  @{lib}/{,NetworkManager/}nm-iface-helper                   rPx,
  @{lib}/{,NetworkManager/}nm-initrd-generator               rPx,
  @{lib}/{,NetworkManager/}nm-openvpn-auth-dialog            rPx,
  @{lib}/{,NetworkManager/}nm-openvpn-service                rPx,
  @{lib}/{,NetworkManager/}nm-openvpn-service-openvpn-helper rPx,
  /usr/share/netplan/netplan.script                          rPx,
  owner /{etc,run}/netplan/{,*.yaml} r,

  @{lib}/netplan/@{int2}-network-manager-all.yaml w,

  /usr/share/gvfs/remote-volume-monitors/{,*.monitor} r,
  /usr/share/iproute2/{,**} r,

  /etc/netplan/ r,
  /etc/netplan/90-NM-@{uuid}.yaml r,

  @{att}/ r,

  /etc/ r,
  /etc/iproute2/* r,
  /etc/machine-id r,
  /etc/network/interfaces r,
  /etc/network/interfaces.d/{,*} r,
  /etc/NetworkManager/{,**} r,
  /etc/NetworkManager/system-connections/{,**} w,
  @{etc_rw}/netplan/90-NM-@{uuid}.yaml w,
  @{etc_rw}/resolv.conf rw,
  @{etc_rw}/resolv.conf.[0-9A-Z]* rw,

  /var/lib/iwd/*open* rw,
  /var/lib/NetworkManager/{,**} rw,

  owner /{usr/,}lib{,32,64}/** rw,

  @{sys}/bus/ r,
  @{sys}/class/ r,
  @{sys}/class/net/ r,
  @{sys}/class/net/rfkill/ r,
  @{sys}/class/rfkill/ r,

  @{att}/@{run}/systemd/inhibit/@{int}.ref rw,
  @{run}/systemd/resolve/io.systemd.Resolve rw,

  @{run}/netplan/ r,
  @{run}/network/ifstate r,
  @{run}/NetworkManager/{,**} rw,
  @{run}/nm-*.pid rw,
  @{run}/nscd/db* rwl,
  @{run}/systemd/users/@{uid} r,
  @{run}/udev/data/+pci:* r,              # Identifies all PCI devices (CPU, GPU, Network, Disks, USB, etc.)
  @{run}/udev/data/+platform:* r,         # Identifies onboard devices (laptop/board model, power controllers, thermal sensors)
  @{run}/udev/data/+rfkill:* r,           # Kill switch for wireless devices (Wi-Fi, Bluetooth, NFC) to save power
  @{run}/udev/data/n@{int} r,             # For network interfaces
  owner @{run}/systemd/inhibit/@{int}.ref w,

  @{sys}/devices/@{pci}/net/*/{,**} r,
  @{sys}/devices/@{pci}/usb@{int}/**/net/{,**} r,
  @{sys}/devices/**/@{uuid}/net/*/{,**} r,
  @{sys}/devices/**/uevent r,
  @{sys}/devices/virtual/*/{,**} r,      # net, mac80211_hwsim, ...
  owner @{sys}/devices/** r,

        @{PROC}/@{pids}/stat r,
        @{PROC}/1/environ r,
        @{PROC}/cmdline r,
        @{PROC}/sys/kernel/osrelease r,
        @{PROC}/sys/net/** rw,
  owner @{PROC}/@{pid}/cmdline r,
  owner @{PROC}/@{pid}/fd/ r,

  /dev/net/tun rw,
  /dev/rfkill rw,

  profile systemctl {
    include <abstractions/base>
    include <abstractions/app/systemctl>

    include if exists <local/NetworkManager_systemctl>
  }

  include if exists <local/NetworkManager>
}

# vim:syntax=apparmor
