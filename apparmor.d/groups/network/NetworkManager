# apparmor.d - Full set of apparmor profiles
# Copyright (C) 2021 Alexandre Pujol <alexandre@pujol.io>
# SPDX-License-Identifier: GPL-2.0-only

abi <abi/3.0>,

include <tunables/global>

@{exec_path} = /{usr/,}{,s}bin/NetworkManager
profile NetworkManager @{exec_path} flags=(attach_disconnected) {
  include <abstractions/base>
  include <abstractions/dbus-network-manager-strict>
  include <abstractions/dbus-strict>
  include <abstractions/nameservice-strict>
  include <abstractions/openssl>
  include <abstractions/ssl_certs>

  capability audit_write,
  capability dac_override,
  capability kill,
  capability net_admin,
  capability net_bind_service,
  capability net_raw,
  capability setgid,
  capability setuid,
  capability sys_chroot,
  capability sys_module,

  network inet stream,
  network inet6 stream,
  network inet dgram,
  network inet6 dgram,
  network inet raw,
  network inet6 raw,
  network netlink raw,
  network packet dgram,

  dbus (send,receive) bus=system path=/org/freedesktop/NetworkManager{,/**}
       interface=org.freedesktop.{DBus.Properties,DBus.Introspectable,NetworkManager*},

  dbus (send,receive) bus=system path=/org/freedesktop/PolicyKit[0-9]/Authority
       interface=org.freedesktop.PolicyKit[0-9].Authority
       member={Changed,CheckAuthorization,CancelCheckAuthorization},

  dbus (send,receive) bus=system path=/org/freedesktop/login[0-9]
       interface=org.freedesktop.login[0-9].Manager
       member={SessionRemoved,UserNew,SessionNew,Inhibit,PrepareForShutdown,UserRemoved,PrepareForSleep}
       peer=(name=:*, label=systemd-logind),

  dbus send bus=system path=/org/freedesktop/DBus
       interface=org.freedesktop.DBus
       member={RequestName,GetConnectionUnixUser,GetConnectionUnixProcessID},

  dbus send bus=system path=/org/freedesktop
       interface=org.freedesktop.DBus.ObjectManager
       member={InterfacesAdded,InterfacesRemoved}
       peer=(name=org.freedesktop.DBus), # label="{gnome-shell,...}"

  dbus send bus=system path=/org/freedesktop/nm_dispatcher
       interface=org.freedesktop.nm_dispatcher
       member=Action
       peer=(name=org.freedesktop.nm_dispatcher),

  dbus send bus=system path=/org/freedesktop/ModemManager[0-9]
       interface=org.freedesktop.DBus.ObjectManager
       member=GetManagedObjects,

  dbus send bus=system path=/org/freedesktop/resolve[0-9]
       interface=org.freedesktop.resolve[0-9].Manager
       member={SetLink*,ResolveHostname},
       # org.freedesktop.resolve1

  dbus send bus=system path=/org/freedesktop/hostname[0-9]
       interface=org.freedesktop.DBus.Properties
       member=GetAll,

  dbus send bus=system path=/org/freedesktop/ModemManager[0-9]
       interface=org.freedesktop.DBus.ObjectManager
       member=GetManagedObjects,

  dbus receive bus=system path=/org/freedesktop
       interface=org.freedesktop.DBus.ObjectManager
       member=GetManagedObjects,

  dbus bind bus=system 
       name=org.freedesktop.NetworkManager,

  @{exec_path} mr,

  /{usr/,}bin/{,ba,da}sh rix,

  /{usr/,}bin/dnsmasq                            rPx,
  /{usr/,}bin/resolvconf                         rPx,
  /{usr/,}bin/systemctl                          rPx -> child-systemctl,
  /{usr/,}lib/{NetworkManager/,}nm-dhcp-helper                     rPx,
  /{usr/,}lib/{NetworkManager/,}nm-dispatcher                      rPx,
  /{usr/,}lib/{NetworkManager/,}nm-iface-helper                    rPx,
  /{usr/,}lib/{NetworkManager/,}nm-initrd-generator                rPx,
  /{usr/,}lib/{NetworkManager/,}nm-openvpn-auth-dialog             rPx,
  /{usr/,}lib/{NetworkManager/,}nm-openvpn-service                 rPx,
  /{usr/,}lib/{NetworkManager/,}nm-openvpn-service-openvpn-helper  rPx,

  /usr/share/gvfs/remote-volume-monitors/{,*.monitor} r,

  / r,
  /etc/ r,
  /etc/machine-id r,
  @{etc_rw}/resolv.conf rw,
  @{etc_rw}/resolv.conf.[0-9A-Z]* rw,
  /etc/network/interfaces r,
  /etc/network/interfaces.d/{,*} r,

  /etc/NetworkManager/{,**} r,
  /etc/NetworkManager/system-connections/{,**} w,

  /var/lib/iwd/*open* rw,
  /var/lib/NetworkManager/{,**} rw,

  @{sys}/bus/ r,
  @{sys}/class/ r,
  @{sys}/class/rfkill/ r,
  @{sys}/class/net/ r,
  @{sys}/class/net/rfkill/ r,

  @{run}/network/ifstate r,
  @{run}/NetworkManager/{,**} rw,
  @{run}/systemd/inhibit/[0-9]*.ref rw,
  @{run}/systemd/users/@{uid} r,
  @{run}/udev/data/n[0-9]* r,
  @{run}/udev/data/+rfkill:* r,
  @{run}/udev/data/+platform* r,
  @{run}/udev/data/+pci* r,

  @{sys}/devices/**/uevent r,
  @{sys}/devices/virtual/net/{,**} r,
  @{sys}/devices/pci[0-9]*/**/net/*/{,**} r,
  @{sys}/devices/pci[0-9]*/**/usb[0-9]/**/net/{,**} r,

  owner @{PROC}/@{pid}/cmdline r,
  owner @{PROC}/@{pid}/fd/ r,
        @{PROC}/@{pids}/stat r,
        @{PROC}/1/environ r,
        @{PROC}/cmdline r,
        @{PROC}/sys/kernel/osrelease r,
        @{PROC}/sys/net/** rw,

  /dev/rfkill rw,

  include if exists <local/NetworkManager>
}
