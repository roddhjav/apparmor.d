// apparmor.d - Full set of apparmor profiles
// Copyright (C) 2021-2024 Alexandre Pujol <alexandre@pujol.io>
// SPDX-License-Identifier: GPL-2.0-only

package prebuild

import (
	"strings"

	"github.com/roddhjav/apparmor.d/pkg/paths"
)

// Hide is the default content of debian/apparmor.d.hide. Whonix has special addition.
var Hide = `# This file is generated by "just", all edit will be lost.

/etc/apparmor.d/usr.bin.firefox
/etc/apparmor.d/usr.bin.swtpm
/etc/apparmor.d/usr.bin.wsdd
/etc/apparmor.d/usr.libexec.geoclue
/etc/apparmor.d/usr.sbin.cups-browsed
/etc/apparmor.d/usr.sbin.cupsd
/etc/apparmor.d/usr.sbin.rsyslogd
`

type Flagger struct{}

func (f Flagger) Read(name string) map[string][]string {
	res := map[string][]string{}
	path := FlagDir.Join(name + ".flags")
	if !path.Exist() {
		return res
	}

	lines := path.MustReadFilteredFileAsLines()
	for _, line := range lines {
		manifest := strings.Split(line, " ")
		profile := manifest[0]
		flags := []string{}
		if len(manifest) > 1 {
			flags = strings.Split(manifest[1], ",")
		}
		res[profile] = flags
	}
	return res
}

type Ignorer struct{}

func (i Ignorer) Read(name string) []string {
	path := IgnoreDir.Join(name + ".ignore")
	if !path.Exist() {
		return []string{}
	}
	return path.MustReadFilteredFileAsLines()
}

type DebianHider struct {
	path *paths.Path
}

// Init initializes the file with content from Hide
func (d DebianHider) Init() error {
	return d.path.WriteFile([]byte(Hide))
}
